# compiler: R8
# compiler_version: 3.3.83
# min_api: 30
# common_typos_disable
# {"id":"com.android.tools.r8.mapping","version":"2.0"}
# pg_map_id: 22f1be0
# pg_map_hash: SHA-256 22f1be0e2c7877754df375584a2ea7dd8a1cded67aded0f5b66f2e952e44aab1
android.app.GameManager -> android.app.GameManager:
# {"id":"com.android.tools.r8.synthesized"}
    void <clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    int getGameMode() -> getGameMode
      # {"id":"com.android.tools.r8.synthesized"}
    void setGameState(android.app.GameState) -> setGameState
      # {"id":"com.android.tools.r8.synthesized"}
bitter.jnibridge.JNIBridge$a -> bitter.jnibridge.JNIBridge$a:
    java.lang.Object -$$Nest$fgeta(bitter.jnibridge.JNIBridge$a) -> a
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputb(bitter.jnibridge.JNIBridge$a,long) -> b
      # {"id":"com.android.tools.r8.synthesized"}
com.google.ar.core.R$id -> com.google.ar.core.R$a:
    int __arcore_continueButton -> b
    int __arcore_messageText -> c
    int __arcore_cancelButton -> a
com.google.ar.core.R$layout -> com.google.ar.core.R$b:
    int __arcore_education -> a
com.google.ar.core.R$string -> com.google.ar.core.R$c:
    int __arcore_install_feature -> b
    int __arcore_installing -> c
    int __arcore_install_app -> a
com.google.ar.core.aa -> com.google.ar.core.b:
com.google.ar.core.ab -> com.google.ar.core.c:
com.google.ar.core.ac -> com.google.ar.core.d:
com.google.ar.core.ad -> com.google.ar.core.e:
com.google.ar.core.ae -> com.google.ar.core.f:
    com.google.ar.core.ae n -> q
    com.google.ar.core.ae l -> o
    com.google.ar.core.ae r -> u
    com.google.ar.core.ae p -> s
    com.google.ar.core.ae v -> y
    com.google.ar.core.ae t -> w
    com.google.ar.core.ae y -> B
    com.google.ar.core.ae C -> F
    com.google.ar.core.ae b -> e
    com.google.ar.core.ae A -> D
    com.google.ar.core.ae f -> i
    com.google.ar.core.ae E -> H
    com.google.ar.core.ae d -> g
    java.lang.Class H -> b
    java.lang.String I -> c
    com.google.ar.core.ae j -> m
    com.google.ar.core.ae h -> k
    com.google.ar.core.ae o -> r
    com.google.ar.core.ae m -> p
    com.google.ar.core.ae s -> v
    com.google.ar.core.ae q -> t
    com.google.ar.core.ae w -> z
    com.google.ar.core.ae u -> x
    int G -> a
    com.google.ar.core.ae x -> A
    com.google.ar.core.ae c -> f
    com.google.ar.core.ae B -> E
    com.google.ar.core.ae a -> d
    com.google.ar.core.ae z -> C
    com.google.ar.core.ae g -> j
    com.google.ar.core.ae F -> I
    com.google.ar.core.ae e -> h
    com.google.ar.core.ae D -> G
    com.google.ar.core.ae k -> n
    com.google.ar.core.ae i -> l
com.google.ar.core.af -> com.google.ar.core.g:
    com.google.ar.core.af a -> c
    com.google.ar.core.af e -> g
    com.google.ar.core.af d -> f
    com.google.ar.core.af c -> e
    com.google.ar.core.af b -> d
    com.google.ar.core.af i -> k
    com.google.ar.core.af h -> j
    com.google.ar.core.af g -> i
    com.google.ar.core.af f -> h
    java.lang.Class l -> b
    int j -> a
    com.google.ar.core.af[] k -> l
com.google.ar.core.ag -> com.google.ar.core.h:
com.google.ar.core.ah -> com.google.ar.core.i:
    int $r8$clinit -> d
com.google.ar.core.ai -> com.google.ar.core.j:
    int $r8$clinit -> d
com.google.ar.core.aj -> com.google.ar.core.k:
com.google.ar.core.b -> com.google.ar.core.l:
com.google.ar.core.c -> com.google.ar.core.m:
com.google.ar.core.d -> com.google.ar.core.n:
com.google.ar.core.e -> com.google.ar.core.o:
com.google.ar.core.f -> com.google.ar.core.p:
com.google.ar.core.g -> com.google.ar.core.q:
com.google.ar.core.h -> com.google.ar.core.s:
com.google.ar.core.i -> com.google.ar.core.t:
com.google.ar.core.j -> com.google.ar.core.u:
    com.google.ar.core.u i -> h
    boolean j -> i
    long f -> e
    boolean k -> j
    int l -> k
    com.google.ar.core.j c -> l
    int e -> d
    boolean h -> g
    boolean d -> b
    com.google.ar.core.ArCoreApk$Availability g -> f
    boolean b -> c
com.google.ar.core.k -> com.google.ar.core.v:
    com.google.ar.core.ArImage a -> c
    long b -> a
    int c -> b
com.google.ar.core.l -> com.google.ar.core.w:
com.google.ar.core.m -> com.google.ar.core.x:
com.google.ar.core.n -> com.google.ar.core.y:
com.google.ar.core.o -> com.google.ar.core.z:
com.google.ar.core.p -> com.google.ar.core.a0:
com.google.ar.core.q -> com.google.ar.core.b0:
com.google.ar.core.r -> com.google.ar.core.c0:
com.google.ar.core.s -> com.google.ar.core.d0:
com.google.ar.core.t -> com.google.ar.core.e0:
com.google.ar.core.u -> com.google.ar.core.f0:
com.google.ar.core.v -> com.google.ar.core.g0:
com.google.ar.core.w -> com.google.ar.core.h0:
com.google.ar.core.x -> com.google.ar.core.i0:
com.google.ar.core.y -> com.google.ar.core.j0:
com.google.ar.core.z -> com.google.ar.core.k0:
com.google.vr.dynamite.client.c -> a.a:
com.google.vr.dynamite.client.d -> a.b:
com.google.vr.dynamite.client.e -> com.google.vr.dynamite.client.c:
com.google.vr.dynamite.client.f -> a.c:
com.google.vr.dynamite.client.g -> com.google.vr.dynamite.client.d:
com.unity3d.player.D -> com.unity3d.player.D:
    int -$$Nest$sfgeta() -> a
      # {"id":"com.android.tools.r8.synthesized"}
    int -$$Nest$sfgetb() -> b
      # {"id":"com.android.tools.r8.synthesized"}
    int -$$Nest$sfgetc() -> c
      # {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.E -> com.unity3d.player.E:
    android.content.Context -$$Nest$fgeta(com.unity3d.player.E) -> a
      # {"id":"com.android.tools.r8.synthesized"}
    com.unity3d.player.UnityPlayerForActivityOrService -$$Nest$fgetb(com.unity3d.player.E) -> b
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.String -$$Nest$ma(com.unity3d.player.E) -> c
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$ma(com.unity3d.player.E,java.lang.String,boolean) -> d
      # {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.HFPStatus -> com.unity3d.player.HFPStatus:
    boolean -$$Nest$fgetc(com.unity3d.player.HFPStatus) -> a
      # {"id":"com.android.tools.r8.synthesized"}
    android.media.AudioManager -$$Nest$fgetd(com.unity3d.player.HFPStatus) -> b
      # {"id":"com.android.tools.r8.synthesized"}
    boolean -$$Nest$fgete(com.unity3d.player.HFPStatus) -> c
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fpute(com.unity3d.player.HFPStatus,boolean) -> d
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputf(com.unity3d.player.HFPStatus,com.unity3d.player.HFPStatus$a) -> e
      # {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.N -> com.unity3d.player.N:
    com.unity3d.player.UnityPlayer -$$Nest$fgeta(com.unity3d.player.N) -> a
      # {"id":"com.android.tools.r8.synthesized"}
    boolean -$$Nest$fgetb(com.unity3d.player.N) -> b
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputb(com.unity3d.player.N,boolean) -> c
      # {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.Q -> com.unity3d.player.Q:
    com.unity3d.player.a -$$Nest$fgeta(com.unity3d.player.Q) -> a
      # {"id":"com.android.tools.r8.synthesized"}
    com.unity3d.player.UnityPlayerForActivityOrService -$$Nest$fgetb(com.unity3d.player.Q) -> b
      # {"id":"com.android.tools.r8.synthesized"}
    com.unity3d.player.z -$$Nest$fgetc(com.unity3d.player.Q) -> c
      # {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.ReflectionHelper -> com.unity3d.player.ReflectionHelper:
    long -$$Nest$sfgetb() -> a
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$smnativeProxyFinalize(long) -> b
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object -$$Nest$smnativeProxyInvoke(long,java.lang.String,java.lang.Object[]) -> c
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$smnativeProxyLogJNIInvokeException(long) -> d
      # {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.ReflectionHelper$a -> com.unity3d.player.ReflectionHelper$a:
    void -$$Nest$fputd(com.unity3d.player.ReflectionHelper$a,long) -> a
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fpute(com.unity3d.player.ReflectionHelper$a,boolean) -> b
      # {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.ReflectionHelper$b -> com.unity3d.player.ReflectionHelper$b:
    int -$$Nest$fgetd(com.unity3d.player.ReflectionHelper$b) -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.UnityAccessibilityDelegate -> com.unity3d.player.UnityAccessibilityDelegate:
    com.unity3d.player.UnityPlayer -$$Nest$fgeta(com.unity3d.player.UnityAccessibilityDelegate) -> a
      # {"id":"com.android.tools.r8.synthesized"}
    android.view.View -$$Nest$fgetb(com.unity3d.player.UnityAccessibilityDelegate) -> b
      # {"id":"com.android.tools.r8.synthesized"}
    android.view.accessibility.AccessibilityManager -$$Nest$fgetc(com.unity3d.player.UnityAccessibilityDelegate) -> c
      # {"id":"com.android.tools.r8.synthesized"}
    int -$$Nest$fgete(com.unity3d.player.UnityAccessibilityDelegate) -> d
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputd(com.unity3d.player.UnityAccessibilityDelegate,com.unity3d.player.UnityAccessibilityDelegate$c) -> e
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fpute(com.unity3d.player.UnityAccessibilityDelegate,int) -> f
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$ma(com.unity3d.player.UnityAccessibilityDelegate,int) -> g
      # {"id":"com.android.tools.r8.synthesized"}
    int[] -$$Nest$smgetRootNodeIds() -> h
      # {"id":"com.android.tools.r8.synthesized"}
    int -$$Nest$smhitTest(float,float) -> i
      # {"id":"com.android.tools.r8.synthesized"}
    boolean -$$Nest$smisClickable(int) -> j
      # {"id":"com.android.tools.r8.synthesized"}
    boolean -$$Nest$smperformClickAction(int) -> k
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$smperformOnFocusChanged(int,boolean) -> l
      # {"id":"com.android.tools.r8.synthesized"}
    boolean -$$Nest$smpopulateNodeInfo(android.view.accessibility.AccessibilityNodeInfo,int,android.view.View) -> m
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$smsendElementFocusedNotification(int) -> n
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$smsendScreenReaderStatusChangedNotification(boolean) -> o
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$smsetAccessibilityManagerIsEnabled(boolean) -> p
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$smsetAccessibilityManagerIsTouchExplorationEnabled(boolean) -> q
      # {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.UnityPlayer -> com.unity3d.player.UnityPlayer:
    int -$$Nest$fgetmInitialScreenOrientation(com.unity3d.player.UnityPlayer) -> a
      # {"id":"com.android.tools.r8.synthesized"}
    com.unity3d.player.F -$$Nest$fgetm_SplashScreen(com.unity3d.player.UnityPlayer) -> b
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputmVideoPlayerProxy(com.unity3d.player.UnityPlayer,com.unity3d.player.h0) -> c
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputm_SplashScreen(com.unity3d.player.UnityPlayer,com.unity3d.player.F) -> d
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$minvokeOnMainThread(com.unity3d.player.UnityPlayer,com.unity3d.player.UnityPlayer$l) -> e
      # {"id":"com.android.tools.r8.synthesized"}
    boolean -$$Nest$mnativeIsAutorotationOn(com.unity3d.player.UnityPlayer) -> f
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mnativeMuteMasterAudio(com.unity3d.player.UnityPlayer,boolean) -> g
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$smnativeSetLaunchURL(java.lang.String) -> h
      # {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.UnityPlayer$j -> com.unity3d.player.UnityPlayer$j:
    long -$$Nest$fgeta(com.unity3d.player.UnityPlayer$j) -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.UnityPlayer$k -> com.unity3d.player.UnityPlayer$k:
    void <init>(com.unity3d.player.UnityPlayer,com.unity3d.player.UnityPlayer$k-IA) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.UnityPlayer$k-IA -> com.unity3d.player.i0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.UnityPlayerForActivityOrService -> com.unity3d.player.UnityPlayerForActivityOrService:
    boolean -$$Nest$fgetmMainDisplayOverride(com.unity3d.player.UnityPlayerForActivityOrService) -> i
      # {"id":"com.android.tools.r8.synthesized"}
    com.unity3d.player.E -$$Nest$fgetmSoftInputDialog(com.unity3d.player.UnityPlayerForActivityOrService) -> j
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputmSoftInputDialog(com.unity3d.player.UnityPlayerForActivityOrService,com.unity3d.player.E) -> k
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mnativeOnApplyWindowInsets(com.unity3d.player.UnityPlayerForActivityOrService,android.view.WindowInsets) -> l
      # {"id":"com.android.tools.r8.synthesized"}
    boolean -$$Nest$mnativePause(com.unity3d.player.UnityPlayerForActivityOrService) -> m
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mnativeRecreateGfxState(com.unity3d.player.UnityPlayerForActivityOrService,int,android.view.Surface) -> n
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mnativeReportKeyboardConfigChanged(com.unity3d.player.UnityPlayerForActivityOrService) -> o
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mnativeResume(com.unity3d.player.UnityPlayerForActivityOrService) -> p
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mnativeSendSurfaceChangedEvent(com.unity3d.player.UnityPlayerForActivityOrService) -> q
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mnativeSetInputArea(com.unity3d.player.UnityPlayerForActivityOrService,int,int,int,int) -> r
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mnativeSetInputSelection(com.unity3d.player.UnityPlayerForActivityOrService,int,int) -> s
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mnativeSetInputString(com.unity3d.player.UnityPlayerForActivityOrService,java.lang.String) -> t
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mnativeSetKeyboardIsVisible(com.unity3d.player.UnityPlayerForActivityOrService,boolean) -> u
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mnativeSoftInputCanceled(com.unity3d.player.UnityPlayerForActivityOrService) -> v
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mnativeSoftInputClosed(com.unity3d.player.UnityPlayerForActivityOrService) -> w
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mnativeSoftInputLostFocus(com.unity3d.player.UnityPlayerForActivityOrService) -> x
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mqueueDestroy(com.unity3d.player.UnityPlayerForActivityOrService) -> y
      # {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.UnityPlayerForGameActivity -> com.unity3d.player.UnityPlayerForGameActivity:
    void -$$Nest$mnativeOrientationChanged(com.unity3d.player.UnityPlayerForGameActivity,int,int) -> i
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mnativeUnityPlayerSetRunning(com.unity3d.player.UnityPlayerForGameActivity,boolean) -> j
      # {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.V -> com.unity3d.player.V:
    com.unity3d.player.UnityPlayerForActivityOrService -$$Nest$fgeta(com.unity3d.player.V) -> a
      # {"id":"com.android.tools.r8.synthesized"}
    android.os.Handler -$$Nest$fgetb(com.unity3d.player.V) -> b
      # {"id":"com.android.tools.r8.synthesized"}
    boolean -$$Nest$fgetc(com.unity3d.player.V) -> c
      # {"id":"com.android.tools.r8.synthesized"}
    boolean -$$Nest$fgetd(com.unity3d.player.V) -> d
      # {"id":"com.android.tools.r8.synthesized"}
    com.unity3d.player.T -$$Nest$fgete(com.unity3d.player.V) -> e
      # {"id":"com.android.tools.r8.synthesized"}
    int -$$Nest$fgetf(com.unity3d.player.V) -> f
      # {"id":"com.android.tools.r8.synthesized"}
    int -$$Nest$fgetg(com.unity3d.player.V) -> g
      # {"id":"com.android.tools.r8.synthesized"}
    int -$$Nest$fgeth(com.unity3d.player.V) -> h
      # {"id":"com.android.tools.r8.synthesized"}
    int -$$Nest$fgeti(com.unity3d.player.V) -> i
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputc(com.unity3d.player.V,boolean) -> j
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputd(com.unity3d.player.V,boolean) -> k
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fpute(com.unity3d.player.V,com.unity3d.player.T) -> l
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputf(com.unity3d.player.V,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputi(com.unity3d.player.V,int) -> n
      # {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.Z -> com.unity3d.player.Z:
    void -$$Nest$fputb(com.unity3d.player.Z,boolean) -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.a.a -> b.a:
com.unity3d.player.a.b -> b.b:
com.unity3d.player.a.c -> b.c:
    void -$$Nest$fputb(com.unity3d.player.a.c,int) -> c
      # {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.c -> com.unity3d.player.c:
    java.util.HashSet -$$Nest$fgeta(com.unity3d.player.c) -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.h0 -> com.unity3d.player.h0:
    com.unity3d.player.UnityPlayer -$$Nest$fgeta(com.unity3d.player.h0) -> a
      # {"id":"com.android.tools.r8.synthesized"}
    android.content.Context -$$Nest$fgetb(com.unity3d.player.h0) -> b
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.concurrent.Semaphore -$$Nest$fgetd(com.unity3d.player.h0) -> c
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.concurrent.locks.Lock -$$Nest$fgete(com.unity3d.player.h0) -> d
      # {"id":"com.android.tools.r8.synthesized"}
    com.unity3d.player.a0 -$$Nest$fgetf(com.unity3d.player.h0) -> e
      # {"id":"com.android.tools.r8.synthesized"}
    boolean -$$Nest$fgeti(com.unity3d.player.h0) -> f
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputf(com.unity3d.player.h0,com.unity3d.player.a0) -> g
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputg(com.unity3d.player.h0,int) -> h
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputi(com.unity3d.player.h0,boolean) -> i
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$ma(com.unity3d.player.h0) -> j
      # {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.i -> com.unity3d.player.i:
    com.unity3d.player.UnityPlayer -$$Nest$fgeta(com.unity3d.player.i) -> a
      # {"id":"com.android.tools.r8.synthesized"}
    com.google.android.play.core.assetpacks.AssetPackManager -$$Nest$fgetb(com.unity3d.player.i) -> b
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.HashSet -$$Nest$fgetc(com.unity3d.player.i) -> c
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object -$$Nest$fgetd(com.unity3d.player.i) -> d
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputd(com.unity3d.player.i,java.lang.Object) -> e
      # {"id":"com.android.tools.r8.synthesized"}
    com.unity3d.player.i -$$Nest$sfgete() -> f
      # {"id":"com.android.tools.r8.synthesized"}
    int -$$Nest$sma(java.lang.Throwable) -> g
      # {"id":"com.android.tools.r8.synthesized"}
com.unity3d.player.s -> com.unity3d.player.s:
    com.unity3d.player.a.a -$$Nest$fgeta(com.unity3d.player.s) -> a
      # {"id":"com.android.tools.r8.synthesized"}
    android.hardware.camera2.CameraDevice -$$Nest$fgetb(com.unity3d.player.s) -> b
      # {"id":"com.android.tools.r8.synthesized"}
    android.util.Range -$$Nest$fgetn(com.unity3d.player.s) -> c
      # {"id":"com.android.tools.r8.synthesized"}
    android.media.Image -$$Nest$fgetp(com.unity3d.player.s) -> d
      # {"id":"com.android.tools.r8.synthesized"}
    android.hardware.camera2.CaptureRequest$Builder -$$Nest$fgetq(com.unity3d.player.s) -> e
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object -$$Nest$fgets(com.unity3d.player.s) -> f
      # {"id":"com.android.tools.r8.synthesized"}
    android.view.Surface -$$Nest$fgetv(com.unity3d.player.s) -> g
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputb(com.unity3d.player.s,android.hardware.camera2.CameraDevice) -> h
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputp(com.unity3d.player.s,android.media.Image) -> i
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputq(com.unity3d.player.s,android.hardware.camera2.CaptureRequest$Builder) -> j
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$fputr(com.unity3d.player.s,android.hardware.camera2.CameraCaptureSession) -> k
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$ma(com.unity3d.player.s,android.hardware.camera2.CameraDevice) -> l
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$ma(com.unity3d.player.s,java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
    void -$$Nest$mf(com.unity3d.player.s) -> n
      # {"id":"com.android.tools.r8.synthesized"}
    java.util.concurrent.Semaphore -$$Nest$sfgetD() -> o
      # {"id":"com.android.tools.r8.synthesized"}
